name: Continuous Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for version calculation
    
    - name: Generate version info
      id: version
      run: |
        # Generate version based on date and commit count
        VERSION="$(date +'%Y.%m.%d').$(git rev-list --count HEAD)"
        SHORT_SHA=$(git rev-parse --short HEAD)
        FULL_VERSION="${VERSION}-${SHORT_SHA}"
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT
        echo "sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
        
        echo "Generated version: ${FULL_VERSION}"
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Build all platforms
      run: |
        mkdir -p artifacts
        
        # Build for each platform
        for RID in win-x64 linux-x64 linux-arm64 osx-x64 osx-arm64; do
          echo "Building for ${RID}..."
          dotnet publish TravelingSalesman.ConsoleApp/TravelingSalesman.ConsoleApp.csproj \
            -c Release -r ${RID} \
            --self-contained -p:PublishAot=true -p:PublishSingleFile=true \
            -p:AssemblyVersion=${{ steps.version.outputs.version }} \
            -p:FileVersion=${{ steps.version.outputs.version }} \
            -o ./publish-${RID}
          
          # Package the binary
          if [[ "${RID}" == win-* ]]; then
            mv ./publish-${RID}/TravelingSalesman.ConsoleApp.exe ./artifacts/TSP-${RID}-${{ steps.version.outputs.sha }}.exe
          else
            mv ./publish-${RID}/TravelingSalesman.ConsoleApp ./artifacts/TSP-${RID}-${{ steps.version.outputs.sha }}
            chmod +x ./artifacts/TSP-${RID}-${{ steps.version.outputs.sha }}
          fi
        done
        
        # Create a version info file
        cat > ./artifacts/version.txt << EOF
        Version: ${{ steps.version.outputs.full_version }}
        Commit: ${{ github.sha }}
        Branch: ${{ github.ref_name }}
        Build Date: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        EOF
        
        ls -lah ./artifacts/
    
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.full_version }}
        name: Release ${{ steps.version.outputs.full_version }}
        draft: false
        prerelease: true  # Mark as pre-release since it's automated
        generate_release_notes: true  # Auto-generate changelog
        files: ./artifacts/*
        body: |
          ## Automated Release for commit ${{ github.sha }}
          
          **Version:** ${{ steps.version.outputs.full_version }}
          **Commit:** ${{ github.sha }}
          
          ### ðŸ“¦ Downloads
          - Windows x64: `TSP-win-x64-${{ steps.version.outputs.sha }}.exe`
          - Linux x64: `TSP-linux-x64-${{ steps.version.outputs.sha }}`
          - Linux ARM64: `TSP-linux-arm64-${{ steps.version.outputs.sha }}`
          - macOS x64: `TSP-osx-x64-${{ steps.version.outputs.sha }}`
          - macOS ARM64: `TSP-osx-arm64-${{ steps.version.outputs.sha }}`
          
          ### ðŸ”„ Changes
          ${{ github.event.head_commit.message }}