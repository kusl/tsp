name: Continuous Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
          - os: ubuntu-latest
            rid: linux-x64
          # ARM64 Linux removed - requires special cross-compilation setup
          - os: macos-latest
            rid: osx-x64
          - os: macos-latest
            rid: osx-arm64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate version info
      id: version
      shell: bash
      run: |
        VERSION="$(date +'%Y.%m.%d').$(git rev-list --count HEAD)"
        SHORT_SHA=$(git rev-parse --short HEAD)
        FULL_VERSION="${VERSION}-${SHORT_SHA}"
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT
        echo "sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
        
        echo "Generated version: ${FULL_VERSION}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build native binary
      shell: bash
      run: |
        mkdir -p artifacts
        
        echo "Building for ${{ matrix.rid }}..."
        dotnet publish TravelingSalesman.ConsoleApp/TravelingSalesman.ConsoleApp.csproj \
          -c Release -r ${{ matrix.rid }} \
          --self-contained -p:PublishAot=true -p:PublishSingleFile=true \
          -p:AssemblyVersion=${{ steps.version.outputs.version }} \
          -p:FileVersion=${{ steps.version.outputs.version }} \
          -o ./publish-${{ matrix.rid }}
        
        # Package the binary
        if [[ "${{ matrix.rid }}" == win-* ]]; then
          mv ./publish-${{ matrix.rid }}/TravelingSalesman.ConsoleApp.exe ./artifacts/TSP-${{ matrix.rid }}-${{ steps.version.outputs.sha }}.exe
        else
          mv ./publish-${{ matrix.rid }}/TravelingSalesman.ConsoleApp ./artifacts/TSP-${{ matrix.rid }}-${{ steps.version.outputs.sha }}
          chmod +x ./artifacts/TSP-${{ matrix.rid }}-${{ steps.version.outputs.sha }}
        fi
        
        ls -lah ./artifacts/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.rid }}
        path: ./artifacts/*

  create-release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate version info
      id: version
      run: |
        VERSION="$(date +'%Y.%m.%d').$(git rev-list --count HEAD)"
        SHORT_SHA=$(git rev-parse --short HEAD)
        FULL_VERSION="${VERSION}-${SHORT_SHA}"
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT
        echo "sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create version info file
      run: |
        cat > ./artifacts/version.txt << EOF
        Version: ${{ steps.version.outputs.full_version }}
        Commit: ${{ github.sha }}
        Branch: ${{ github.ref_name }}
        Build Date: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.full_version }}
        name: Release ${{ steps.version.outputs.full_version }}
        draft: false
        prerelease: true
        generate_release_notes: true
        files: |
          ./artifacts/**/*
        body: |
          ## Automated Release for commit ${{ github.sha }}
          
          **Version:** ${{ steps.version.outputs.full_version }}
          **Commit:** ${{ github.sha }}
          
          ### ðŸ“¦ Downloads
          - Windows x64: `TSP-win-x64-${{ steps.version.outputs.sha }}.exe`
          - Linux x64: `TSP-linux-x64-${{ steps.version.outputs.sha }}`
          - macOS x64 (Intel): `TSP-osx-x64-${{ steps.version.outputs.sha }}`
          - macOS ARM64 (M1/M2): `TSP-osx-arm64-${{ steps.version.outputs.sha }}`
          
          ### ðŸ”„ Changes
          ${{ github.event.head_commit.message }}