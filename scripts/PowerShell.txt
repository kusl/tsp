latest change breaks previously passing tests as well 

 Algorithm characteristics validation
   Source: Benchmarking.feature line 27
   Duration: 488 ms

  Message: 
Reqnroll.MissingStepDefinitionException : No matching step definition found for one or more steps.

  Stack Trace: 
ErrorProvider.ThrowPendingError(ScenarioExecutionStatus testStatus, String message)
TestExecutionEngine.OnAfterLastStepAsync()
TestRunner.CollectScenarioErrorsAsync()
AlgorithmBenchmarkingFeature.ScenarioCleanupAsync()
AlgorithmBenchmarkingFeature.AlgorithmCharacteristicsValidation() line 37
--- End of stack trace from previous location ---

  Standard Output: 
Given I have 15 randomly generated cities for benchmarking
-> done: BenchmarkingSteps.GivenIHaveRandomlyGeneratedCities(15) (0.0s)
When I benchmark the following algorithms:
  --- table step argument ---
  | Algorithm           |
  | Nearest Neighbor    |
  | 2-Opt               |
  | Simulated Annealing |
  | Genetic Algorithm   |
-> done: BenchmarkingSteps.WhenIBenchmarkTheFollowingAlgorithms(<table>) (0.0s)
Then Nearest Neighbor should be among the fastest algorithms
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"^Nearest Neighbor should be among the fastest algorithms$")]
public void ThenNearestNeighborShouldBeAmongTheFastestAlgorithms()
{
    _scenarioContext.Pending();
}

And 2-Opt should produce same or better solution than Nearest Neighbor
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"^(.*)-Opt should produce same or better solution than Nearest Neighbor$")]
public void Then_OptShouldProduceSameOrBetterSolutionThanNearestNeighbor(int p0)
{
    _scenarioContext.Pending();
}

And advanced algorithms should produce competitive solutions
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"^advanced algorithms should produce competitive solutions$")]
public void ThenAdvancedAlgorithmsShouldProduceCompetitiveSolutions()
{
    _scenarioContext.Pending();
}


 Quick algorithm comparison on small dataset
   Source: Benchmarking.feature line 40
   Duration: 22.6 sec

  Message: 
Reqnroll.MissingStepDefinitionException : No matching step definition found for one or more steps.

  Stack Trace: 
ErrorProvider.ThrowPendingError(ScenarioExecutionStatus testStatus, String message)
TestExecutionEngine.OnAfterLastStepAsync()
TestRunner.CollectScenarioErrorsAsync()
AlgorithmBenchmarkingFeature.ScenarioCleanupAsync()
AlgorithmBenchmarkingFeature.QuickAlgorithmComparisonOnSmallDataset() line 45
--- End of stack trace from previous location ---

  Standard Output: 
Given I have 8 randomly generated cities for benchmarking
-> done: BenchmarkingSteps.GivenIHaveRandomlyGeneratedCities(8) (0.0s)
When I benchmark all available algorithms
-> done: BenchmarkingSteps.WhenIBenchmarkAllAvailableAlgorithms() (22.5s)
Then all algorithms should find good solutions within 20% of optimal
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"^all algorithms should find good solutions within (.*)% of optimal$")]
public void ThenAllAlgorithmsShouldFindGoodSolutionsWithinOfOptimal(int p0)
{
    _scenarioContext.Pending();
}

And Nearest Neighbor should complete in under 10 milliseconds
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"^Nearest Neighbor should complete in under (.*) milliseconds$")]
public void ThenNearestNeighborShouldCompleteInUnderMilliseconds(int p0)
{
    _scenarioContext.Pending();
}

And all algorithms should complete in under 1 second
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"^all algorithms should complete in under (.*) second$")]
public void ThenAllAlgorithmsShouldCompleteInUnderSecond(int p0)
{
    _scenarioContext.Pending();
}


 Solution quality on moderate problem
   Source: Benchmarking.feature line 48
   Duration: 93 ms

  Message: 
Reqnroll.MissingStepDefinitionException : No matching step definition found for one or more steps.

  Stack Trace: 
ErrorProvider.ThrowPendingError(ScenarioExecutionStatus testStatus, String message)
TestExecutionEngine.OnAfterLastStepAsync()
TestRunner.CollectScenarioErrorsAsync()
AlgorithmBenchmarkingFeature.ScenarioCleanupAsync()
AlgorithmBenchmarkingFeature.SolutionQualityOnModerateProblem() line 56
--- End of stack trace from previous location ---

  Standard Output: 
Given I have 25 randomly generated cities for benchmarking
-> done: BenchmarkingSteps.GivenIHaveRandomlyGeneratedCities(25) (0.0s)
When I benchmark the following algorithms:
  --- table step argument ---
  | Algorithm           |
  | 2-Opt               |
  | Simulated Annealing |
  | Genetic Algorithm   |
-> done: BenchmarkingSteps.WhenIBenchmarkTheFollowingAlgorithms(<table>) (0.1s)
Then each algorithm should find a valid tour
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"^each algorithm should find a valid tour$")]
public void ThenEachAlgorithmShouldFindAValidTour()
{
    _scenarioContext.Pending();
}

And the best solution should be better than a random tour
-> No matching step definition found for the step. Use the following code to create one:
        [Then(@"^the best solution should be better than a random tour$")]
public void ThenTheBestSolutionShouldBeBetterThanARandomTour()
{
    _scenarioContext.Pending();
}


